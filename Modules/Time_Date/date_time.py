# -*- coding: utf-8 -*-
"""date_time.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MbqNLdoU0qxzW0CITSoKmvMJaM1TvI9F
"""

#naive datetime : simple date time not timezones
#aware datetime : times zones information
import datetime as dt
from datetime import timedelta as td
d = dt.date(2025,1,2) # create date object
#fetching todays date
day = dt.date.today()
day.weekday() #mon =0 ,tue = 1 , ...
day.isoweekday() #mon = 1 , tue = 2 , ...

#time deltas
add_days = td(days = 10)

#operations using timedelta
day + add_days

 #calculating my age
birth_date = dt.date(2004,1,29)
today = dt.date.today()
time = today -birth_date
time.total_seconds()
time.days

#years :
time/td(days = 365)

#creating only time object
time = dt.time(9 , 30)
time.hour

#creating both time and dae object
date_Time = dt.datetime(2025,2,1,2,14)
date_Time.year
date_Time.hour

#current date and time
dt.datetime.now()

#adding year

add_year = td(days= 365*10)
current = dt.datetime.now()
modified = add_year + current
modified

#

dt.datetime.now()   # naive ,dont support time zone
dt.datetime.today()  #supports time zone
dt.datetime.utcnow() # SUPPORT timezone

import pytz
dt.datetime(2024,1,2,2,30,tzinfo = pytz.UTC)

#For dealing with time zones we have clases but python offers a  good moudle pytz
dt.datetime.now(tz = pytz.UTC) # current time zone

#convertion of time zone
date  = datetime.now()
aware = pytz.utc.localize(date)
aware = aware.astimezone(pytz.timezone('US/Pacific'))
aware
#time zone
current = dt.datetime.now(tz = pytz.UTC)
current.astimezone(pytz.timezone('Asia/Kolkata')).hour


#converting naive date time to time zone date time
date  = dt.datetime.now()

# The .strftime() method in Python is used to format datetime objects as strings. It allows you to customize how the date and time is displayed.

# datetime_object.strftime(format_string)
date  = dt.datetime.now()
date.strftime('%Y-%m-%d')
date.strftime('%Y-%m-%d-%I')
date.strftime('%Y-%m-%d-%I-%p')

from datetime import datetime

# Example string date
date_string = "2025-01-02"

# Convert string to date
date_object = datetime.strptime(date_string, "%Y-%m-%d").date()

print(date_object)

tasks = [
    {"task": "Task 1", "due_date": "2024-03-15"},
    {"task": "Task 2", "due_date": "2023-12-01"},
    {"task": "Task 3", "due_date": "2024-01-10"}
]

from datetime import datetime
lst = []
for i in tasks:
  i['due_date'] = datetime.strptime( i['due_date'],"%Y-%m-%d").date()
  temp = []
  temp.append(i['task'])
  temp.append(i['due_date'])
  lst.append(temp)

lst.sort(key = lambda x : x[1])
for i in lst:
  print(f'{i[0]} - due : {i[1]}')